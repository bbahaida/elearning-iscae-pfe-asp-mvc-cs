@model List<DocumentNonOfficiel>
@using ISCAE.Data
@{

    List<Etudiant> etudiants = (List<Etudiant>)ViewBag.Etudiants;
    List<Module> modules = ViewBag.Modules;
    int pageIndex = ViewBag.pageIndex;
    int maxPage = ViewBag.maxPage;
    Dictionary<Etudiant,int> topUsers = (Dictionary<Etudiant, int>)ViewBag.TopUsers;
}



<div class="row">
    <!-- Left col -->
    <div class="col-md-8">
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Documents</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <div class="table-responsive">
                    <table class="table no-margin">
                        <thead>
                            <tr>
                                <th>Titre</th>
                                <th>Module</th>
                                <th>type</th>
                                <th>Ajouter par</th>
                                <th>Telechargement</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (Model.Count > 0)
                                {
                                    foreach (DocumentNonOfficiel document in Model)
                                    {
                                        <tr>
                                            <td>@document.Titre</td>
                                            <td><span class="label label-success">@modules.Find(o => o.ModuleId == document.ModuleId).Designation</span></td>
                                            <td>@document.Type</td>
                                            <td>@etudiants.Find(o => o.EtudiantId == document.EtudiantId).Nom</td>
                                            <td><a href="@Url.Action("Download","Document",new { documentId = document.DocumentNonOfficielId })"><span class="fa fa-arrow-down"></span></a></td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr><td colspan="5">Pas de donnees</td></tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <!-- /.table-responsive -->

            </div>
            <!-- /.box-body -->
            <div class="box-footer">
                <div class="pull-right">
                    @using (Html.BeginForm("NonOfficiel","Document",FormMethod.Get,new { @id = "form-pagination"}))
                    {
                        <input type="hidden" id="pageIndex" name="pageIndex" value="@pageIndex" />
                        <div class="">
                            <button id="previous" type="submit" @((Model.Count()) == 0 || pageIndex == 1 ? "disabled" : "" ) class="btn btn-default btn-sm"><i class="fa fa-chevron-left"></i></button>
                            @{
                                if (maxPage > 0)
                                {
                                    for (int i = 1; i <= maxPage; i++)
                                    {
                                        if (i == pageIndex)
                                        {
                                            <i><b>@i</b></i>
                                        }
                                        else
                                        {
                                            <i>@i</i>
                                        }
                                    }
                                }


                            }
                            <button id="next" type="submit" @((Model.Count()) == 0 || pageIndex == maxPage ? "disabled" : "" ) class="btn btn-default btn-sm"><i class="fa fa-chevron-right"></i></button>
                        </div>
                                }
                    <!-- /.btn-group -->
                </div>
            </div>
        </div>
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Ajouter un nouveau</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Html.BeginForm("AddDocument", "Document", FormMethod.Post, new { enctype = "multipart/form-data", @id = "add-document" }))
            {
                <div class="box-body">

                    <div class="form-group">
                        <label for="document">Document</label>
                        <input type="file" id="document" name="document">
                        <p class="help-block"></p>
                    </div>
                    <div class="form-group">
                        <label for="">Module</label>
                        <select class="form-control" id="modules" name="module">
                            @{
                                foreach (Module m in modules)
                                {
                                    <option value="@m.ModuleId">@m.Designation</option>
                                }
                            }
                        </select>
                    </div>

                </div>
                <!-- /.box-body -->
                                <div class="box-footer">
                                    <button type="submit" class="btn btn-success">Submit</button>
                                </div>
                                }
        </div>
    </div>
    <div class="col-md-4">
        <!--Annonces-->
        <div class="box box-success">
            <div class="box-header with-border">
                <h3 class="box-title">Top Etudiant</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-header -->

            <div class="box-footer no-padding">
                <ul class="nav nav-pills nav-stacked">
                    @{
                        if (topUsers.Count > 0)
                        {
                            foreach (Etudiant e in topUsers.Keys)
                            {
                                <li>
                                    <a href="#">
                                        @e.Nom
                                        <span class="pull-right text-green">@topUsers[e].ToString()</span>
                                    </a>
                                </li>
                            }
                        }
                        else
                        {
                            <li>
                                <a href="#">
                                    Pas de document
                                    <span class="pull-right text-green"><i class="fa fa-exclamation-triangle"></i></span>
                                </a>
                            </li>
                        }

                    }
                </ul>
            </div>
            <!-- /.footer -->
        </div>
        <!-- /.box -->
    </div>
    <!-- /.col -->
</div>
<!-- /.row -->